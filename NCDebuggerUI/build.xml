<?xml version="1.0" encoding="UTF-8"?>

<!--
    Version 1.3
    
    There is nothing to edit in this file all user set up
    is now in configuration.properties
-->

<project name="NCDebugUI" basedir="." default="car" >
	
	<!-- User configuration -->
	<property file="${basedir}/configuration.properties"/>

	<!-- these properties are filled in automagically -->
	<property name="cartridge.carfile" value=""/>

	<!-- build environment -->
	<property name="fglant.dir" value="lib/fglant"/>
	<property name="fglclient.dir" value="lib/client"/>
	<property name="src.dir" value="src"/>
	<property name="build.dir" value="build"/>
	<property name="dist.dir" value="dist"/>
	<property name="wcf.dir" value="wcf"/>
	<property name="res.dir" value="${basedir}/res"/>
	<property environment="env"/>
	
	
	<!-- set the timestamp -->
	<tstamp/>
        <property name="build.id" value="${DSTAMP}-${TSTAMP}"/>

	<!-- Groovy script definition -->
	<path id="groovy.path">
		<fileset dir="${groovy.home}">
			<include name="**/*.jar"/>
		</fileset>
	</path>
	<taskdef name="groovy" classname="org.codehaus.groovy.ant.Groovy" classpathref="groovy.path"/>

	
	<target name="init">

		<mkdir dir="${build.dir}"/>
		<mkdir dir="${dist.dir}"/>
		<mkdir dir="${wcf.dir}"/>
		<mkdir dir="${basedir}/tmp"/>
        <mkdir dir="${basedir}/namespaces"/>
	
		<!-- munge the version number -->
		<groovy><![CDATA[
			version = properties.get("cartridge.version");
			name = properties.get("cartridge.name");
			us = version.replace('.', '_');
			println "munged version $us";
			properties.put("cartridge.carfile", "${name}-${us}.car");
			println                      "${name}-${us}.car"
		]]></groovy>
		
		<!-- define car task -->
		<path id="fglant.path">
			<fileset dir="${fglant.dir}">
				<include name="*.jar"/>
			</fileset>
		</path>
		<taskdef name="car" classname="com.quest.nitro.tools.ant.cartridge.Car" classpathref="fglant.path"/>
	</target>
	
	

	<target name="clean" description="Clean before rebuild">
		<delete dir="${build.dir}"/>
		<delete dir="${dist.dir}"/>
        <delete dir="${basedir}/tmp"/>
	</target>
	
	<target name="scrub" depends="clean" description="Remove Src!!!">
		<delete dir="${src.dir}"/>
		<delete dir="${res.dir}"/>
		<delete dir="${wcf.dir}"/>
        <delete dir="${basedir}/namespaces"/>

    </target>
	
	<!-- Automation -->
	<target name="uninstallCar" depends="init" description="Uninstall Cartridge">
		<!-- disable the cartridge first - belt and braces -->
		<java jar="${fglclient.dir}/foglight-cmdline-client.jar" fork="true" failonerror="false">
			<arg line='-usr ${foglight.user} -pwd ${foglight.password} -srv ${foglight.server} -port ${foglight.port} -cmd cartridge:disable -n "${cartridge.name}" -v ${cartridge.version} ' />
			<classpath path="${basedir}/lib/client">
			</classpath>
		</java>
		<!-- really uninstall it now -->
		<java jar="${fglclient.dir}/foglight-cmdline-client.jar" fork="true" failonerror="false">
			<arg line='-usr ${foglight.user} -pwd ${foglight.password} -srv ${foglight.server} -port ${foglight.port} -cmd cartridge:uninstall -n "${cartridge.name}" -v ${cartridge.version} ' />
            <classpath path="${basedir}/lib/client">
			</classpath>
		</java>
	</target>
	
	<target name="installCar" depends="car" description="Install Cartridge">

		<java jar="${fglclient.dir}/foglight-cmdline-client.jar" fork="true" failonerror="true">
			<arg line="-usr ${foglight.user} -pwd ${foglight.password} -srv ${foglight.server} -port ${foglight.port} -cmd cartridge:install -f ${dist.dir}/${cartridge.carfile} "/>
            <classpath path="${basedir}/lib/client">
			</classpath>
		</java>
	</target>
	<target name="reinstallCar" depends="car" description="Re Install Cartridge">
		<antcall target="uninstallCar"/>
		<antcall target="installCar"/>
	</target>

	<macrodef name="fglcmd">
			<attribute name="command" />
		<attribute name="server" />		
			<sequential>
				<java jar="lib/client/foglight-cmdline-client.jar" fork="true" failonerror="true">
							<arg line='-usr ${foglight.user} -pwd ${foglight.password} -srv @{server} -port ${foglight.port} -cmd @{command}' />
							<classpath path="${fglclient.dir}">
							</classpath>
				</java>				   
			</sequential>
		</macrodef>
	<macrodef name="exportRes">
			<attribute name="tmpFilename" />
			<attribute name="module"  />
			<attribute name="server" />		
			<sequential>
				<delete file="@{tmpFilename}" failonerror="true"></delete>
				<fglcmd command="fglide:exportCartridgeContent -file @{tmpFilename} -name @{module} " server="@{server}"/>
				
				
			</sequential>
		</macrodef>


    <target name="car" depends="init" description="Car">
        <groovy><![CDATA[
			version = properties.get("cartridge.version");
			name = properties.get("cartridge.name");
			us = version.replace('.', '_');
			println "munged version $us";
			properties.put("cartridge.forge6Carfile", "${name}-${us}.car");
		]]></groovy>

        <tstamp>
            <format property="touch.time" pattern="yyyy-MM-MM HH:mm:ss-SSSS"  />
        </tstamp>

        <delete file="${basedir}/tmp/cartridge.xml" failonerror="false"/>
        <copy file="${basedir}/src/manifests/cartridge.xml"
              tofile="${basedir}/tmp/cartridge.xml" >

            <filterchain>
                <replacetokens>
                    <token key="name" value="${namespace.name}"/>
                    <token key="author" value="${cartridge.author}"/>
                    <token key="version" value="${cartridge.version}"/>
                    <token key="buildid" value="${build.id}"/>
                    <token key="time"  value="${touch.time}"/>

                </replacetokens>
            </filterchain>
        </copy>
          <zip destfile="${dist.dir}/${cartridge.carfile}">
              <include name="**/*"/>
              <zipfileset prefix="namespaces" dir="${basedir}/namespaces/${cartridge.name}" includes="**/*"/>
              <fileset file="${basedir}/tmp/cartridge.xml"/>
          </zip>


    </target>

    <target name="exportNamespaces" depends="init">
        <delete file="${basedir}//tmp/namespaces.zip" failonerror="true"></delete>
        <fglcmd command="util:exportNamespaces -file ${basedir}/tmp/namespaces.zip -cartridge ${namespace.name} " server="${foglight.server}"/>

        <delete dir="${basedir}/namespaces" includes="**/*" failonerror="false"></delete>
        <unzip dest="${basedir}/namespaces" src="${basedir}/tmp/namespaces.zip" overwrite="true"   />


    </target>

</project>
