<?xml version="1.0" encoding="UTF-8"?>
<type name="ExecutionDetailDlg" extends="forge.ui.core.Dialog" xmlns="urn:quest-com:forge-types-1-0">
	<import>forge.ui.core.Label</import>
	<import>forge.ui.views.dialog.DialogButton</import>
	<import>forge.ui.views.treetable.NodeDescriptor</import>
	<import>forge.ui.views.treetable.ParentNodeStyle</import>
	<import>ncdebugger.ExecutionEntry</import>
	<import>ncdebugger.getSessionsInfo</import>
	<import>ncdebugger.wrapChildExecutions</import>
	<import>ncdebugger.wrapCurrentExecutions</import>
	<set property="timestamp">2013-07-17T11:28:20.383Z</set>
	<set property="state">VALID</set>
	<set property="initialExpressions">
		<list>
			<item>
				<object>
					<set property="propertyName"><![CDATA[buttons]]></set>
					<set property="script"><![CDATA[[

new DialogButton {
	label: "close",
	onClick: () -> {
		this.close();
	}
}
]]]></set>
				</object>
			</item>
			<item>
				<object>
					<set property="propertyName"><![CDATA[title]]></set>
					<set property="script"><![CDATA[renderText("Execution Details",NORMAL)]]></set>
				</object>
			</item>
		</list>
	</set>
	<set property="childSpecs">
		<list>
			<item>
				<object>
					<set property="name"><![CDATA[executionTree]]></set>
					<set property="viewDefinition">forge.ui.core.TreeTable</set>
					<set property="initialExpressions">
						<list>
							<item>
								<object>
									<set property="propertyName"><![CDATA[columnsStructure]]></set>
									<set property="script"><![CDATA[[{
	id: "name",
	weight:0,
	sizing: {
		weight:1,
		width:250
	},
	header: renderText("Action", NORMAL)
},{
	id: "btn",
	weight:0,
	sizing: {
		weight:0,
width:20
	},
	header: renderText("", NORMAL)
},{
	id: "duration",
	weight:0,
	sizing: {
		weight:0,
width:40
	},
	header: renderText("duration", NORMAL)
},{
	id: "durationTree",
	weight:0,
	sizing: {
		weight:0,
width:40
	},
    header: renderText("duration tree", NORMAL)
}
,{
	id: "startTime",
	weight:0,
	sizing: {
		minimum:80
	},
    header: renderText("start", NORMAL)
},{
	id: "stopTime",
	weight:0,
	sizing: {
		minimum:80
	},
    header: renderText("stop", NORMAL)
}

]
]]></set>
								</object>
							</item>
							<item>
								<object>
									<set property="propertyName"><![CDATA[root]]></set>
									<set property="script"><![CDATA[[wrapCurrentExecutions(getSessionsInfo(this)[0])[0]]]]></set>
								</object>
							</item>
							<item>
								<object>
									<set property="propertyName"><![CDATA[nodeDescriptors]]></set>
									<set property="script"><![CDATA[[
new NodeDescriptor<ExecutionEntry> {
    parentNodeStyleClosure: node-> {
        return ParentNodeStyle.PARENT_IF_HAS_CHILDREN;
    },
    childrenClosure: node ->wrapChildExecutions(node),
    columnsData: [
	{
            id: "name",
            cellViewSetup: (treeTable, cellId, node) -> {
                Label view = treeTable.createCellView(cellId);
                view.content = renderText(node.info, NORMAL);
view.allowWrap=true;
                return view;
            }
        },{
            id: "duration",
            cellViewSetup: (treeTable, cellId, node) -> {
                Label view = treeTable.createCellView(cellId);
                view.content = renderText(node.duration, NORMAL);
                return view;
            }
        },{
            id: "durationTree",
            cellViewSetup: (treeTable, cellId, node) -> {
                Label view = treeTable.createCellView(cellId);
                view.content = renderText(node.totalDuration, NORMAL);
                return view;
            }
        },{
            id: "startTime",
            cellViewSetup: (treeTable, cellId, node) -> {
                Label view = treeTable.createCellView(cellId);
                view.content = renderText(node.startTimestamp, NORMAL);
                return view;
            }
        },{
            id: "stopTime",
            cellViewSetup: (treeTable, cellId, node) -> {
                Label view = treeTable.createCellView(cellId);
                view.content = renderText(node.totalStopTimestamp, NORMAL);
                return view;
            }
        },{
            id: "btn",
            cellViewSetup: (treeTable, cellId, node) -> {
                ExecutionInfoButton view = treeTable.createCellView(cellId);
                view.currentExecution =node;
                return view;
            }
        }
    ]
}
]]]></set>
								</object>
							</item>
							<item>
								<object>
									<set property="propertyName"><![CDATA[rowHeight]]></set>
									<set property="script"><![CDATA[44]]></set>
								</object>
							</item>
						</list>
					</set>
				</object>
			</item>
		</list>
	</set>
	<set property="listeners">
		<list>
			<item>
				<object type="forge.definitions.PropertyChangeListener">
					<set property="script"><![CDATA[executionTree.root = [executionRoot];]]></set>
					<set property="propertyName"><![CDATA[executionRoot]]></set>
				</object>
			</item>
		</list>
	</set>
	<set property="layout">
		<object type="forge.definitions.ColumnLayout">
			<set property="constraint">
				<object type="forge.definitions.TopLevelConstraint"/>
			</set>
			<set property="children">
				<list>
					<item>
						<object type="forge.definitions.ChildRef">
							<set property="constraint">
								<object type="forge.definitions.BoxLayoutConstraint">
									<set property="alignment">STRETCH</set>
									<set property="weight">1</set>
									<set property="minimumWidth">1080</set>
									<set property="minimumHeight">500</set>
								</object>
							</set>
							<set property="name"><![CDATA[executionTree]]></set>
						</object>
					</item>
				</list>
			</set>
		</object>
	</set>
	<property name="executionRoot" type="ExecutionEntry"/>
</type>
